/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M13
 * Generated at: 2017-03-08 11:57:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages.back;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class showphoto_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <base href=\"");
      out.print(basePath);
      out.write("\">\r\n");
      out.write("    \r\n");
      out.write("    <title>相册</title>\r\n");
      out.write("    \r\n");
      out.write("\t<meta http-equiv=\"pragma\" content=\"no-cache\">\r\n");
      out.write("\t<meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n");
      out.write("\t<meta http-equiv=\"expires\" content=\"0\">\r\n");
      out.write("\t<link href=\"images/head/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\" />\r\n");
      out.write("\r\n");
      out.write("  </head>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"jqueryPic/src/images-grid.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t.htmleaf-content p {\r\n");
      out.write("\t\t\ttext-align: center;\r\n");
      out.write("\t\t\tfont-weight: bold;\r\n");
      out.write("\t\t\tcolor:blue;\r\n");
      out.write("\t\t\tmargin-top: 20px;\r\n");
      out.write("\t\t\tfont-size: 25px;\r\n");
      out.write("\t\t}\r\n");
      out.write("</style>\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("  <body>\r\n");
      out.write("   ");
      out.write("\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t<h1 style=\"position:-20 0 0 0\">相册</h1>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"htmleaf-container\">\r\n");
      out.write("\t<div class=\"htmleaf-content\">\r\n");
      out.write("\t\t\t<hr><p>小封面</p>\r\n");
      out.write("\t\t\t<div id=\"gallery1\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<hr><p>大封面</p>\r\n");
      out.write("\t\t\t<div id=\"gallery2\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<hr><p>详情图片</p>\r\n");
      out.write("\t\t\t<div id=\"gallery3\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\t<script src=\"jqueryPic/js/jquery-2.1.1.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"jqueryPic/src/images-grid.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\tvar images1=[");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picLittleLists}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("];\r\n");
      out.write(" \tvar images2=[");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picMainLists}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("];\r\n");
      out.write("\tvar images3=[");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${picDetailLists}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("];\r\n");
      out.write("\t/* var images = [\r\n");
      out.write("\t\t'images/1.jpg',\r\n");
      out.write("\t\t'images/2.jpg',\r\n");
      out.write("\t\t'images/3.jpg',\r\n");
      out.write("\t\t'images/4.jpg',\r\n");
      out.write("\t\t'images/5.jpg',\r\n");
      out.write("\t\t'images/6.jpg'\r\n");
      out.write("\t];\r\n");
      out.write(" */\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t$('#gallery1').imagesGrid({\r\n");
      out.write("\t\t\timages: images1,\r\n");
      out.write("\t\t\talign: true,\r\n");
      out.write("\t\t\tgetViewAllText: function(imgsCount) { return '查看全部图片' }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$('#gallery2').imagesGrid({\r\n");
      out.write("\t\t\timages: images2,\r\n");
      out.write("\t\t\talign: true,\r\n");
      out.write("\t\t\tgetViewAllText: function(imgsCount) { return '查看全部图片' }\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$('#gallery3').imagesGrid({\r\n");
      out.write("\t\t\timages: images3,\r\n");
      out.write("\t\t\talign: true,\r\n");
      out.write("\t\t\tgetViewAllText: function(imgsCount) { return '查看全部图片' }\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
